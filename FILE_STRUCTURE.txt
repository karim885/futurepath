FuturePath - Complete File Structure
=====================================

UNI HAWK/
│
├── 📄 Configuration Files
│   ├── package.json              # Dependencies and scripts
│   ├── tsconfig.json             # TypeScript configuration
│   ├── tailwind.config.ts        # Tailwind CSS customization
│   ├── postcss.config.js         # PostCSS configuration
│   ├── next.config.js            # Next.js configuration
│   ├── .eslintrc.json            # ESLint rules
│   ├── .prettierrc               # Prettier formatting
│   ├── .gitignore                # Git ignore patterns
│   ├── next-env.d.ts             # Next.js type definitions
│   └── .env.example              # Environment variables template
│
├── 📚 Documentation
│   ├── README.md                 # Main project documentation
│   ├── SETUP_GUIDE.md            # Step-by-step setup instructions
│   ├── PROJECT_SUMMARY.md        # Complete feature summary
│   └── FILE_STRUCTURE.txt        # This file
│
├── 🎨 app/                        # Next.js 14 App Directory
│   ├── layout.tsx                # Root layout with providers
│   ├── page.tsx                  # Landing page (home)
│   ├── globals.css               # Global styles and Tailwind
│   │
│   ├── 🔐 auth/                  # Authentication Pages
│   │   ├── signin/
│   │   │   └── page.tsx          # Sign in page
│   │   └── signup/
│   │       └── page.tsx          # Sign up page
│   │
│   ├── 🎯 quiz/                  # Quiz Interface
│   │   └── page.tsx              # AI chatbot quiz page
│   │
│   ├── 📊 results/               # Results Pages
│   │   └── [id]/
│   │       └── page.tsx          # Individual result page
│   │
│   ├── 📈 dashboard/             # User Dashboard
│   │   └── page.tsx              # Dashboard with stats
│   │
│   ├── 👤 profile/               # User Profile
│   │   └── page.tsx              # Profile with badges
│   │
│   ├── 🎓 universities/          # University Browser
│   │   └── page.tsx              # University listing page
│   │
│   └── 🔌 api/                   # API Routes
│       ├── auth/
│       │   ├── [...nextauth]/
│       │   │   └── route.ts      # NextAuth configuration
│       │   └── signup/
│       │       └── route.ts      # User registration
│       ├── quiz/
│       │   ├── questions/
│       │   │   └── route.ts      # Get quiz questions
│       │   └── submit/
│       │       └── route.ts      # Submit quiz answers
│       ├── results/
│       │   └── [id]/
│       │       └── route.ts      # Get quiz results
│       └── user/
│           └── dashboard/
│               └── route.ts      # Get user dashboard data
│
├── 🧩 components/                # Reusable React Components
│   ├── Navbar.tsx                # Navigation bar
│   ├── Footer.tsx                # Footer component
│   └── SessionProvider.tsx       # NextAuth session wrapper
│
├── 💾 models/                    # MongoDB Models
│   ├── User.ts                   # User schema and model
│   └── QuizResult.ts             # Quiz result schema
│
├── 🔧 lib/                       # Utility Libraries
│   ├── mongodb.ts                # MongoDB connection handler
│   ├── openai.ts                 # OpenAI integration
│   └── badges.ts                 # Badge system logic
│
├── 📊 data/                      # Static Data
│   └── universities.json         # University dataset (20 universities)
│
└── 📝 types/                     # TypeScript Type Definitions
    └── next-auth.d.ts            # NextAuth type extensions


Key Features by File:
=====================

Landing Page (app/page.tsx)
- Hero section with gradient animations
- Feature showcase
- How it works section
- Statistics display
- CTA buttons

Quiz Interface (app/quiz/page.tsx)
- AI chatbot interface
- 8 personalized questions
- Progress tracking
- Real-time message animations
- Answer submission

Results Page (app/results/[id]/page.tsx)
- Career recommendations with match %
- University recommendations
- Points earned display
- Share functionality
- Next steps CTAs

Dashboard (app/dashboard/page.tsx)
- User statistics
- Points and badges
- Recent quiz history
- Progress tracking
- Badge showcase

Profile (app/profile/page.tsx)
- User information
- All badges display
- Earned vs locked badges
- Achievement tracking

Universities (app/universities/page.tsx)
- 20 top universities
- Search and filter
- Country and field filters
- University details

Authentication (app/auth/)
- Sign in with email/password
- Sign up with email/password
- Google OAuth integration
- Guest mode support

API Endpoints:
- POST /api/auth/signup - Register new user
- POST /api/auth/[...nextauth] - Authentication
- GET /api/quiz/questions - Get questions
- POST /api/quiz/submit - Submit answers
- GET /api/results/[id] - Get results
- GET /api/user/dashboard - Dashboard data


Database Models:
================

User Model (models/User.ts)
- name, email, password
- provider (credentials/google)
- points, badges, quizzesTaken
- timestamps

QuizResult Model (models/QuizResult.ts)
- userId or guestId
- answers array
- careerRecommendations array
- universityRecommendations array
- pointsEarned
- timestamps


Tech Stack Summary:
===================

Frontend:
- Next.js 14 (App Router)
- React 18
- TypeScript 5
- Tailwind CSS 3
- Framer Motion (animations)
- Lucide React (icons)

Backend:
- Next.js API Routes
- MongoDB + Mongoose
- NextAuth.js (authentication)
- bcryptjs (password hashing)

AI & Data:
- OpenAI API (GPT-3.5)
- Static university dataset

Development:
- ESLint (linting)
- Prettier (formatting)
- TypeScript (type checking)


Pages & Routes:
===============

Public Routes:
- / (Landing page)
- /auth/signin (Sign in)
- /auth/signup (Sign up)
- /quiz (Take quiz - guest allowed)
- /results/[id] (View results)
- /universities (Browse universities)

Protected Routes:
- /dashboard (Requires login)
- /profile (Requires login)

API Routes:
- /api/auth/* (Authentication)
- /api/quiz/* (Quiz operations)
- /api/results/* (Results data)
- /api/user/* (User data)


Installation:
=============

1. npm install
2. Set up .env (see .env.example)
3. npm run dev
4. Open http://localhost:3000

See SETUP_GUIDE.md for detailed instructions!

